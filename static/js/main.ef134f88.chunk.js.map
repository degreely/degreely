{"version":3,"sources":["img/landing.svg","img/logo.svg","pages/About.js","pages/Support.js","components/Mod.jsx","components/Sem.jsx","data/dashboard-data.js","components/Dashboard.jsx","pages/Landing.js","components/Button.jsx","components/LandingHeader.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Support","Mod","props","modData","draggableId","code","index","key","provided","snapshot","className","ref","innerRef","draggableProps","dragHandleProps","Card","style","backgroundColor","isDragging","Body","Title","Subtitle","mcs","Text","name","Sem","semData","droppableId","droppableProps","isDraggingOver","mods","map","placeholder","sems","Y1S1","Y1S2","DEFAULT_SET_UP","Dashboard","onDragEnd","result","state","source","destination","sem","updatedMods","splice","movedMod","setState","sourceSem","sourceMods","destSem","destMods","Container","Row","Object","entries","this","Col","React","Component","Landing","fluid","Typography","variant","align","Button","size","src","landing","alt","primaryStyle","borderColor","paddingTop","paddingBottom","paddingLeft","paddingRight","secondaryStyle","color","Btn","type","title","LandingHeader","Navbar","expand","Brand","Nav","Link","as","to","logo","Toggle","aria-controls","Collapse","id","App","basename","path","component","LandingPage","AboutPage","SupportPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef134f88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.6a73e9e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.eb47fbc3.svg\";","import React from \"react\";\n\nconst About = () => {\n  return <h1>This is the about page</h1>;\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Support = () => {\n  return <h1>This is the support page</h1>;\n};\n\nexport default Support;\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport \"../css/Mod.css\";\r\n\r\nfunction Mod(props) {\r\n    const modData = props.modData;\r\n    return (\r\n        <Draggable draggableId={modData.code} index={props.index} key={modData.code}>\r\n            {(provided, snapshot) => {\r\n                return (\r\n                    <div className=\"mod\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <Card style={{backgroundColor: snapshot.isDragging ? 'lightgrey' : 'white', ...provided.dragHandleProps.style}}>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"mod-code\">{modData.code}</Card.Title>\r\n                                <Card.Subtitle className=\"mod-mcs mb-2 text-muted\">{modData.mcs} MCs</Card.Subtitle>\r\n                                <Card.Text className=\"mod-name\">\r\n                                    {modData.name}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default Mod;","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Mod from \"./Mod\";\r\nimport \"../css/Sem.css\";\r\n\r\nfunction Sem(props) {\r\n    const semData = props.semData;\r\n    return (\r\n        <div className=\"sem\">\r\n            <h2 className=\"sem-name\">{semData.name}</h2>\r\n            <Droppable droppableId={semData.name}>\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <div className=\"sem-droppable\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                            <div style={{backgroundColor: snapshot.isDraggingOver ? 'lightblue' : 'white'}}>\r\n                                {semData.mods.map((modData, index) => <Mod key={index} index={index} modData={modData} />)}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sem;","const sems = {\r\n    Y1S1: {\r\n        name: \"Y1S1\",\r\n        mods: [],\r\n    },\r\n    Y1S2: {\r\n        name: \"Y1S2\",\r\n        mods: [],\r\n    }\r\n};\r\n\r\nconst mods = [\r\n    {\r\n        code: \"CS1101S\",\r\n        name: \"Programming Methodology\",\r\n        mcs: 4,\r\n    }, {\r\n        code: \"CS1231\",\r\n        name: \"Discrete Structures\",\r\n        mcs: 4,\r\n    }, {\r\n        code: \"GEQ1000\",\r\n        name: \"Asking Questions\",\r\n        mcs: 4,\r\n    }, {\r\n        code: \"MA1101R\",\r\n        name: \"Linear Algebra I\",\r\n        mcs: 4,\r\n    }, {\r\n        code: \"GEH1002\",\r\n        name: \"Economic Issues in Dev World\",\r\n        mcs: 4,\r\n    },\r\n];\r\n\r\nexport { sems, mods };","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Sem from \"./Sem\";\r\n\r\nimport { sems, mods } from \"../data/dashboard-data\";\r\n\r\nconst DEFAULT_SET_UP = {\r\n    sems: {\r\n        ...sems,\r\n        Y1S1: {\r\n            ...sems.Y1S1,\r\n            mods: mods,\r\n        },\r\n    },\r\n}\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = DEFAULT_SET_UP;\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        const sems = this.state.sems;\r\n        const { source, destination } = result;\r\n        \r\n        if (destination === null) return;\r\n        if (source.droppableId === destination.droppableId) {\r\n            // rearranged mods within a sem\r\n            const sem = sems[source.droppableId];\r\n            const updatedMods = [...sem.mods];\r\n            const [movedMod] = updatedMods.splice(source.index, 1);\r\n            updatedMods.splice(destination.index, 0, movedMod);\r\n            this.setState({\r\n                sems: {\r\n                    ...sems,\r\n                    [sem.name]: {\r\n                        ...sem,\r\n                        mods: updatedMods,\r\n                    },\r\n                }\r\n            });\r\n        } else {\r\n            // moved mod to another sem\r\n            const sourceSem = sems[source.droppableId];\r\n            const sourceMods = [...sourceSem.mods];\r\n            const destSem = sems[destination.droppableId];\r\n            const destMods = [...destSem.mods];\r\n            const [movedMod] = sourceMods.splice(source.index, 1);\r\n            destMods.splice(destination.index, 0, movedMod);\r\n            this.setState({\r\n                sems: {\r\n                    ...sems,\r\n                    [sourceSem.name]: {\r\n                        ...sourceSem,\r\n                        mods: sourceMods,\r\n                    },\r\n                    [destSem.name]: {\r\n                        ...destSem,\r\n                        mods: destMods,\r\n                    },\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DragDropContext onDragEnd={result => this.onDragEnd(result)}>\r\n                <Container>\r\n                    <Row>\r\n                        {Object.entries(this.state.sems).map(([key, semData]) => {\r\n                            return <Col key={key}><Sem semData={semData} /></Col>;\r\n                        })}\r\n                    </Row>\r\n                </Container>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport landing from \"../img/landing.svg\";\n\nimport Dashboard from \"../components/Dashboard\";\n\nconst Landing = () => {\n  return (\n    <Container fluid className=\"my-2\">\n      <Row>\n        <Col>\n          <Typography variant=\"h2\" align=\"left\">\n            Supercharge your degree planning with us today\n          </Typography>\n          <Button variant=\"primary\" size=\"lg\">\n            Sign in with SSO\n          </Button>\n        </Col>\n        <Col>\n          <img src={landing} className=\"landing-art\" alt=\"landing-art\" />\n        </Col>\n      </Row>\n      <Row>\n        <Dashboard />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Btn(props) {\n    if (props.type === \"primary\") {\n        return <Button style={primaryStyle}>{props.title}</Button>;\n    } else if (props.type === \"secondary\") {\n        return <Button style={secondaryStyle}>{props.title}</Button>;\n    }\n}\n\nconst primaryStyle = {\n    backgroundColor: \"#5E60CE\",\n    borderColor: \"#5E60CE\",\n    paddingTop: 12,\n    paddingBottom: 12,\n    paddingLeft: 18,\n    paddingRight: 18,\n};\n\nconst secondaryStyle = {\n  backgroundColor: \"#FFFFFF\",\n  color: \"#5E60CE\",\n  borderColor: \"#5E60CE\",\n  paddingTop: 12,\n  paddingBottom: 12,\n  paddingLeft: 18,\n  paddingRight: 18,\n};\n\nexport default Btn;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Btn from \"./Button\";\nimport logo from \"../img/logo.svg\";\nimport \"../scss/LandingHeader.scss\";\n\nfunction LandingHeader() {\n  return (\n    <div className=\"Landing-header\">\n      <Navbar expand=\"lg\">\n        <div className=\"order-1 mr-auto\">\n          <Navbar.Brand>\n            <Nav.Link as={Link} to=\"/\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Nav.Link>\n          </Navbar.Brand>\n        </div>\n        <div className=\"order-2 mx-auto\">\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/\" className=\"ml-4 mr-4\">\n                <div className=\"Nav-link\">Home</div>\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/about\" className=\"ml-4 mr-4\">\n                <div className=\"Nav-link\">About</div>\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/support\" className=\"ml-4 mr-4\">\n                <div className=\"Nav-link\">Support</div>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n        <div className=\"order-3 ml-auto\">\n          <Btn title=\"Sign in with SSO\" type=\"primary\" />\n        </div>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default LandingHeader;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport AboutPage from \"./pages/About\";\nimport SupportPage from \"./pages/Support\";\nimport LandingPage from \"./pages/Landing\";\nimport LandingHeader from \"./components/LandingHeader\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./scss/App.scss\";\n\nconst App = () => {\n  return (\n    <Router basename=\"/degreely\">\n      <LandingHeader />\n      <Switch>\n        <Route path=\"/\" component={LandingPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/support\" component={SupportPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}